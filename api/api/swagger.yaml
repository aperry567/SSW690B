openapi: '3.0.0'
info:
  description: Doctors on Demand API
  version: 1.0.0
  title: Doctors on Demand API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: http://35.207.6.9:8080/api
    description: Development server
  - url: http://35.193.54.177:8080/api
    description: UAT server
  - url: http://localhost:8080/api
    description: Local server
tags:
  - name: Authentication
    description: 'Login, Signup, Logout, Password Reset, Profile, Update Profile'
  - name: Visits
    description: 'Patient visits'
  - name: Home
    description: 'All home screens that deal with lists of data'
paths:
  /login:
    post:
      tags:
        - Authentication
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: login response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: user is not logged in
          content:
            'text/plain':
              schema:
                type: string
              example: Invalid credentials
  /logout:
    get:
      tags:
        - Authentication
      parameters: 
        - in: query
          name: sessionID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully logged out.  Only response possible for security reasons.
  /passwordRest:
    post:
      tags:
        - Authentication
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@test.com
                secretQuestion:
                  type: string
                  example: what is your favorite color?
                secretAnswer:
                  type: string
                  example: blue
                newPassword:
                  type: string
                  format: password
                  example: P@ssw0rd
              required:
                - email
                - secretQuestion
                - secretAnswer
                - newPassword
      responses:
        '200':
          description: Password successfuly reset
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Bad request
          content:
            'application/json':
              schema:
                type: string
                example: Bad request
  /signup:
    post:
      tags:
        - Authentication
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "test@test.com"
                password:
                  type: string
                  format: password
                  example: "P@ssw0rd"
                role:
                  type: string
                  enum:
                    - patient
                    - doctor
                name:
                  type: string
                  example: "MR Test"
                address:
                  type: string
                  example: "1313 Mockingbird ln\nNew York, NY 12345"
                city:
                  type: string
                state:
                  $ref: '#/components/schemas/States'
                postalCode:
                  type: string
                phone:
                  type: string
                  example: "123-456-7890"
                photo:
                  type: string
                  example: ""
                secretQuestion:
                  type: string
                  example: "what is your favorite color?"
                secretAnswer:
                  type: string
                  example: "blue"
                pharmacyLocation:
                  type: string
                doctorLicences:
                  description: required for doctor sign-ups
                  type: array
                  items:
                    type: object
                    properties:
                      state:
                        $ref: '#/components/schemas/States'
                      license:
                        type: string
              required:
                - email
                - password
                - role
                - name
                - address
                - city
                - state
                - postalCode
                - phone
                - photo
                - secretQuestion
                - secretAnsswer
      responses:
        '200':
          description: Create a new account
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Unable to create account
          content:
            'application/json':
              schema:
                type: string
                example: Email already in use
  /getProfile:
    get:
      tags:
        - Authentication
      parameters:
        - in: query
          name: sessionID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Profile returned
          content:
            'application/json':
              schema:
                type: object
                properties:
                  role:
                    type: string
                    example: "doctor, patient"
                  name:
                    type: string
                    example: "MR Test"
                  address:
                    type: string
                    example: "1313 Mockingbird ln\nNew York, NY 12345"
                  city:
                    type: string
                  state:
                    $ref: '#/components/schemas/States'
                  postalCode:
                    type: string
                  phone:
                    type: string
                    example: "123-456-7890"
                  photo:
                    type: string
                    example: ""
                  secretQuestion:
                    type: string
                    example: "what is your favorite color?"
                  secretAnswer:
                    type: string
                    example: "blue"
                  doctorLicences:
                    description: required for doctor sign-ups
                    type: array
                    items:
                      type: object
                      properties:
                        state:
                          $ref: '#/components/schemas/States'
                        license:
                          type: string
        '400':
          description: Unable to fetch profile
          content:
            'application/json':
              schema:
                type: string
                example: Could not fetch profile
        '401':
          description: User is not signed in.  Return to login screen.
  /updateProfile:
    post:
      tags:
        - Authentication
      parameters:
        - in: query
          name: sessionID
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "MR Test"
                address:
                  type: string
                  example: "1313 Mockingbird ln\nNew York, NY 12345"
                city:
                  type: string
                state:
                  $ref: '#/components/schemas/States'
                postalCode:
                  type: string
                phone:
                  type: string
                  example: "123-456-7890"
                photo:
                  type: string
                  example: ""
                secretQuestion:
                  type: string
                  example: "what is your favorite color?"
                secretAnswer:
                  type: string
                  example: "blue"
                doctorLicences:
                  description: required for doctor sign-ups
                  type: array
                  items:
                    type: object
                    properties:
                      state:
                        $ref: '#/components/schemas/States'
                      license:
                        type: string
      responses:
        '200':
          description: Updated profile
        '400':
          description: Unable to update profile
          content:
            'application/json':
              schema:
                type: string
                example: Could not update profile
        '401':
          description: User is not signed in.  Return to login screen.
  /getPatientHomeItems:
    get:
      tags:
        - Home
      parameters:
        - in: query
          name: sessionID
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: filter
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of patient home screen data
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ListResponse"
  /getDoctorHomeItems:
    get:
      tags:
        - Home
      parameters:
        - in: query
          name: sessionID
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: listFilter
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of doctor home screen data
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ListResponse"
  /getVisitDetail:
    get:
      tags:
        - Visits
      parameters:
        - in: query
          name: sessionID
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: visitID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get Visit Details
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/DetailsResponse"
  /getVisitRelatedItems:
    get:
      tags:
        - Visits
      parameters:
        - in: query
          name: sessionID
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: visitID
          required: true
          schema:
            type: string
        - in: query
          name: filter
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Get Related Items for a Visit
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ListResponse"
  /addVisitRelatedItems:
    post:
      tags:
        - Visits
      parameters:
        - in: query
          name: sessionID
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: visitID
          required: true
          schema:
            type: string
        - in: query
          name: filter
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/AddRelatedItemRequest"
      responses:
        '200':
          description: Related Item updated
  /updateVisit:
    post:
      tags:
        - Visits
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                sessionID:
                  type: string
                visitID:
                  type: integer
                notes:
                  type: string
              required:
                - sessionID
                - visitID
                - notes
      responses:
        '200':
          description: Visit updated
          content:
            'application/json':
              schema:
                type: string
                example: Success
        '400':
          description: Unable to update visit
          content:
            'text/plain':
              schema:
                type: string
                example: Could not update visit
        '401':
          description: User is not signed in.  Return to login screen.
components:
  schemas:
    AddRelatedItemRequest:
      type: object
      properties:
        title:
          type: string
        subtitle:
          type: string
        dateTime:
          type: string
        details:
          type: string
    ListResponse:
      type: object
      properties:
        filters:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              value:
                type: string
                example: "listFilter=0"
              updateURL:
                type: string
              addDetails:
                type: array
                items:
                  type: object
                  properties:
                    label:
                      type: string
                    fieldName:
                      type: string
                    required:
                      type: boolean
                    isDataTime:
                      type: boolean
        items:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
                example: 'visit'
              labelColor:
                type: string
                example: '0xFFFFFFFF'
              photo:
                type: string
                example: base64 encoded image
              title:
                type: string
                example: Persistent Headaches
              subtitle:
                type: string
                example: Dr. Cid Caesar
              dateTime:
                type: string
                example: 'Patient exhibited symptoms for migraines.  Recommending over the counter migraine medication and meditation to reduce migraines.'
              details:
                type: string
                example: 'YYYY-MM-DD HH:MM:SS'
              detailLink:
                type: string
                description: indicates when there's a detail page
                example: 'http://123.123.123/api/getVisit?id=1'
            required:
              - title
              - dateTime
    AuthResponse:
      type: object
      properties:
        sessionID:
          type: string
        nav:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              icon:
                type: string
                description: "string title from https://docs.flutter.io/flutter/material/Icons-class.html"
              apiURL:
                type: string
              screenType:
                type: string
                enum:
                  - list
                  - detail
                  - profile
                  - findDoctor
    DetailsResponse:
      type: object
      properties:
        title:
          type: string
        titleEditable:
          type: boolean
        subtitle:
          type: string
        subtitleEditable:
          type: boolean
        label:
          type: string
        labelColor:
          type: string
        dateTime:
          type: string
        dateTimeEditable:
          type: boolean
        photo:
          type: string
        details:
          type: string
        detailsEditable:
          type: boolean
        chatURL:
          type: string
        relatedItemURL:
          type: string
        saveURL:
          type: string
    States:
      type: string
      enum:
        - ak
        - al
        - az
        - ar
        - ca
        - co
        - ct
        - de
        - dc
        - fl
        - ga
        - hi
        - id
        - il
        - in
        - ia
        - ks
        - ky
        - la
        - me
        - md
        - ma
        - mi
        - mn
        - ms
        - mo
        - mt
        - ne
        - nv
        - nh
        - nj
        - nm
        - ny
        - nc
        - nd
        - oh
        - ok
        - or
        - pa
        - ri
        - sc
        - sd
        - tn
        - tx
        - ut
        - vt
        - va
        - wa
        - wv
        - wi
        - wy
